#BlueJ class context
comment0.target=Graph
comment0.text=\r\n\ implementiert\ einen\ Graphen\ mit\ Kanten\ und\ Knoten\r\n\ \r\n\ @author\ Michael\ Mutin\ \r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Graph()
comment1.text=\r\n\ erstellt\ einen\ leeren\ Graphen\r\n
comment2.params=kn
comment2.target=void\ knotenHinzufuegen(Knoten)
comment2.text=\r\n\ f\u00FCgt\ einen\ Knoten\ hinzu,\ falls\ dieser\ noch\ nicht\ Teil\ des\ Graphen\ ist\r\n\ \r\n\ @param\ kn\ Knoten,\ der\ hinzugef\u00FCgt\ werden\ soll\r\n
comment3.params=kn
comment3.target=void\ knotenEntfernen(Knoten)
comment3.text=\r\n\ entfernt\ einen\ Knoten\ aus\ dem\ Graphen\r\n\ \r\n\ @param\ kn\ Knoten,\ der\ entfernt\ werden\ soll\r\n
comment4.params=ka
comment4.target=void\ kanteHinzufuegen(Verbindung)
comment4.text=\r\n\ f\u00FCgt\ eine\ Kante\ hinzu,\ falls\ zwischen\ den\ jeweiligen\ Knoten\ noch\ keine\ Kante\ existiert\r\n\ \r\n\ @param\ ka\ Kante,\ die\ hinzugef\u00FCgt\ werden\ soll\r\n
comment5.params=ka
comment5.target=void\ kanteEntfernen(Verbindung)
comment5.text=\r\n\ entfernt\ eine\ Kante\r\n\ \r\n\ @param\ Kante,\ die\ entfernt\ werden\ soll\r\n
comment6.params=
comment6.target=java.util.HashSet\ gibKnotenmenge()
comment6.text=\r\n\ gibt\ die\ Menge\ der\ Knoten\ zur\u00FCck\r\n\ \r\n\ @return\ die\ Knotenmenge\r\n
comment7.params=
comment7.target=java.util.HashSet\ gibKantenmenge()
comment7.text=\r\n\ gibt\ die\ Menge\ der\ Kanten\ zur\u00FCck\r\n\ \r\n\ @return\ die\ Kantenmenge\r\n
numComments=8
